[{"F:\\MyProjects\\labtrackerfrontend\\src\\index.js":"1","F:\\MyProjects\\labtrackerfrontend\\src\\App.js":"2","F:\\MyProjects\\labtrackerfrontend\\src\\reportWebVitals.js":"3","F:\\MyProjects\\labtrackerfrontend\\src\\views\\Landing.js":"4","F:\\MyProjects\\labtrackerfrontend\\src\\views\\students\\Exercise.js":"5","F:\\MyProjects\\labtrackerfrontend\\src\\views\\students\\ExerciseDetails.js":"6","F:\\MyProjects\\labtrackerfrontend\\src\\views\\students\\Home.js":"7","F:\\MyProjects\\labtrackerfrontend\\src\\components\\LabCard.js":"8","F:\\MyProjects\\labtrackerfrontend\\src\\components\\Header.js":"9","F:\\MyProjects\\labtrackerfrontend\\src\\components\\ExerciseCard.js":"10","F:\\MyProjects\\labtrackerfrontend\\src\\views\\staffs\\Exercise.js":"11","F:\\MyProjects\\labtrackerfrontend\\src\\views\\staffs\\Home.js":"12"},{"size":517,"mtime":1608944703778,"results":"13","hashOfConfig":"14"},{"size":1203,"mtime":1609147013885,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1608944703786,"results":"16","hashOfConfig":"14"},{"size":1135,"mtime":1609145808520,"results":"17","hashOfConfig":"14"},{"size":1282,"mtime":1608944703793,"results":"18","hashOfConfig":"14"},{"size":3989,"mtime":1609146209439,"results":"19","hashOfConfig":"14"},{"size":3176,"mtime":1608944703797,"results":"20","hashOfConfig":"14"},{"size":3055,"mtime":1609146779937,"results":"21","hashOfConfig":"14"},{"size":1163,"mtime":1608944703766,"results":"22","hashOfConfig":"14"},{"size":3422,"mtime":1609142227708,"results":"23","hashOfConfig":"14"},{"size":6515,"mtime":1609142903772,"results":"24","hashOfConfig":"14"},{"size":6357,"mtime":1609146857801,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"kjkjen",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\MyProjects\\labtrackerfrontend\\src\\index.js",[],["53","54"],"F:\\MyProjects\\labtrackerfrontend\\src\\App.js",[],"F:\\MyProjects\\labtrackerfrontend\\src\\reportWebVitals.js",[],"F:\\MyProjects\\labtrackerfrontend\\src\\views\\Landing.js",["55"],"F:\\MyProjects\\labtrackerfrontend\\src\\views\\students\\Exercise.js",[],"F:\\MyProjects\\labtrackerfrontend\\src\\views\\students\\ExerciseDetails.js",["56"],"F:\\MyProjects\\labtrackerfrontend\\src\\views\\students\\Home.js",["57","58"],"import React, {useState,useEffect} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button'\r\nimport Header from '../../components/Header'\r\nimport LabCard from '../../components/LabCard'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport HistoryIcon from '@material-ui/icons/History'\r\nimport ListIcon from '@material-ui/icons/List'\r\n\r\nconst LAB = [\r\n    {\r\n        lab_name:\"Data structures and Algorithms\",\r\n        lab_code:\"15CS301\",\r\n        exer_ids:['1','2'],\r\n        year:\"2020\"\r\n    },\r\n    {\r\n        lab_name:\"Operating systems\",\r\n        lab_code:\"15CS302\",\r\n        exer_ids:['1','2'],\r\n        year:\"2020\"\r\n    },\r\n    {\r\n        lab_name:\"Computer Graphics\",\r\n        lab_code:\"15CS302\",\r\n        exer_ids:['1','2'],\r\n        year:\"2020\"\r\n    },\r\n]\r\nconst PLAB = [\r\n    {\r\n        lab_name:\"C Programming\",\r\n        lab_code:\"15CS301\",\r\n        exer_ids:['1','2'],\r\n        year:\"2019\"\r\n    },\r\n    {\r\n        lab_name:\"Operating systems\",\r\n        lab_code:\"15CS302\",\r\n        exer_ids:['1','2'],\r\n        year:\"2019\"\r\n    },\r\n]\r\n\r\nconst styles={\r\n    root:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        width:'80%',\r\n        margin:\"0 auto\"\r\n    },\r\n    cardsGrid:{\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        flexWrap:'wrap'\r\n    }\r\n}\r\nfunction Home() {\r\n    const history = useHistory()\r\n    const [currentLabs,setCurrentLabs] = useState([])\r\n    const [pastLabs,setPastLabs] = useState([])\r\n    const [tabValue,setTabValue] = useState(0)\r\n    const handleTabChange = (event,newValue)=>{\r\n        setTabValue(newValue)\r\n    }\r\n    useEffect(()=>{\r\n      setCurrentLabs(LAB)\r\n      setPastLabs(PLAB)\r\n    },[])\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <div style={styles.root}>\r\n                <Paper square>\r\n                    <Tabs\r\n                        value={tabValue}\r\n                        indicatorColor=\"secondary\"\r\n                        textColor=\"secondary\"\r\n                        onChange={handleTabChange}\r\n                    >\r\n                        <Tab label=\"Current\" icon={<ListIcon/>}/>\r\n                        <Tab label=\"Past\" icon={<HistoryIcon/>}/>\r\n                    </Tabs>\r\n                </Paper>\r\n                <div style={styles.cardsGrid}>\r\n                    {tabValue === 0 && ((currentLabs.length>0 && currentLabs.map((lab,idx)=>(\r\n                        <LabCard key={idx} lab={lab}/>\r\n                    )))||(currentLabs.length===0 && \r\n                    <div style={{padding:100}}>\r\n                        No Current Labs !\r\n                    </div>))}\r\n                    {tabValue === 1 && ((pastLabs.length>0 && pastLabs.map((lab,idx)=>(\r\n                        <LabCard key={idx} lab={lab}/>\r\n                    )))||(pastLabs.length===0 && \r\n                    <div style={{padding:100}}>\r\n                        No Past Labs !\r\n                    </div>))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Home","F:\\MyProjects\\labtrackerfrontend\\src\\components\\LabCard.js",[],"F:\\MyProjects\\labtrackerfrontend\\src\\components\\Header.js",[],"F:\\MyProjects\\labtrackerfrontend\\src\\components\\ExerciseCard.js",[],"F:\\MyProjects\\labtrackerfrontend\\src\\views\\staffs\\Exercise.js",["59","60","61"],"import React, {useState,useEffect} from 'react'\r\nimport Header from '../../components/Header'\r\nimport ExerciseCard from '../../components/ExerciseCard'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy'\r\nimport {\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n  } from '@material-ui/pickers';\r\n\r\nconst EXERCISE = [\r\n    {\r\n        exer_no:1,\r\n        title:\"Stacks\",\r\n        date_of_creation:1608814829000\r\n    },\r\n    {\r\n        exer_no:2,\r\n        title:\"Queues\",\r\n        date_of_creation:1608814829000\r\n    },\r\n    {\r\n        exer_no:3,\r\n        title:\"Linked List\",\r\n        date_of_creation:1608814829000\r\n    }\r\n]\r\n\r\nconst styles = {\r\n    root:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        width:'80%',\r\n        margin:\"0 auto\"\r\n    },\r\n    cardsGrid:{\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        flexWrap:'wrap'\r\n    },\r\n    inputContainer:{\r\n        marginTop:'4%'\r\n    }\r\n}\r\nfunction ExerciseFormDialog({exerciseNumber,open,handleDialogClose,exercise,setExercise}){\r\n    const [image,setImage] = useState(null)\r\n    const handleInputChange = (e)=>{\r\n        setExercise({...exercise,[e.target.name]:e.target.value})\r\n    }\r\n    const handleImageInputChange = (e)=>{\r\n        setImage({...image,[e.target.name]:URL.createObjectURL(e.target.files[0])})\r\n    }\r\n    return(\r\n        <Dialog open={open} onClose={handleDialogClose} fullWidth>\r\n        <DialogTitle id=\"form-dialog-title\">New Exercise</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Exercise {exerciseNumber}\r\n          </DialogContentText>\r\n          <div style={styles.inputContainer}>\r\n            <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label=\"Exercise Name\"\r\n                type=\"email\"\r\n                name=\"title\"\r\n                onChange={handleInputChange}\r\n                fullWidth\r\n            />\r\n          </div>\r\n          <div style={styles.inputContainer}>\r\n            <TextField\r\n            label=\"Description\"\r\n            multiline\r\n            rows={4}\r\n            variant=\"outlined\"\r\n            name=\"exer_description\"\r\n            onChange={handleInputChange}\r\n            fullWidth\r\n            />\r\n          </div>\r\n          <div style={styles.inputContainer}>\r\n            <div style={{display:'flex',justifyContent:'space-between'}}>\r\n                <div style={{display:'flex',flexDirection:'column'}}>\r\n                    <Button variant=\"contained\" component=\"label\" color=\"secondary\">\r\n                    Upload Input File\r\n                    <input\r\n                        type=\"file\"\r\n                        hidden\r\n                        onChange={handleImageInputChange}\r\n                        name=\"inputFile\"\r\n                    />\r\n                    </Button>\r\n                    {image&&image.inputFile&&<FileCopyIcon style={{width:80,height:80}} onClick={()=>{\r\n                        window.open(image.inputFile)\r\n                    }} onMouseEnter={(e)=>{e.target.style.cursor = \"pointer\"}}/>}\r\n                </div>\r\n                <div style={{display:'flex',flexDirection:'column'}}>\r\n                    <Button variant=\"contained\" component=\"label\" color=\"primary\">\r\n                    Upload Output File\r\n                    <input\r\n                        type=\"file\"\r\n                        hidden\r\n                        name=\"outputFile\"\r\n                        onChange={handleImageInputChange}\r\n                    />\r\n                    </Button>\r\n                    {image&&image.outputFile&&<FileCopyIcon style={{width:80,height:80}} onClick={()=>{\r\n                        window.open(image.outputFile)\r\n                    }} onMouseEnter={(e)=>{e.target.style.cursor = \"pointer\"}}/>}\r\n                </div>\r\n            </div>\r\n          </div>\r\n          <div style={styles.inputContainer}>\r\n              Deadline\r\n             <TextField\r\n             lable=\"Exercise Deadline\"\r\n             type=\"date\"\r\n             name=\"exer_deadline\"\r\n             onChange={handleInputChange}\r\n             fullWidth/>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDialogClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDialogClose} color=\"primary\">\r\n            Create\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    )\r\n}\r\nfunction Exercise(){\r\n    const [exercises,setExercises] = useState([])\r\n    const [dialogOpen, setDialogOpen] = React.useState(false);\r\n    const [exercise,setExercise] = useState({\r\n        exer_no:null,\r\n        title:\"\",\r\n        date_of_creation:0\r\n    })\r\n\r\n    const openDialog = () => {\r\n        setDialogOpen(true);\r\n    };\r\n\r\n    const handleDialogClose = (e) => {\r\n        if(e.target.innerHTML === \"Create\"){\r\n            setExercise({...exercise,date_of_creation:Date.now()*1000})\r\n            let newExercise = exercises\r\n            exercises.push(exercise)\r\n            setExercises(newExercise)\r\n            setExercise({\r\n                exer_no:null,\r\n                title:\"\",\r\n                date_of_creation:0\r\n            })\r\n        }\r\n        setDialogOpen(false);\r\n    };    \r\n    useEffect(()=>{\r\n        setExercises(EXERCISE)\r\n        setExercise({...exercise,exer_no:exercises.length+1})\r\n    },[])\r\n    return(\r\n        <div>\r\n            <Header/>\r\n            <div style={styles.root}>\r\n                <div style={styles.cardsGrid}>\r\n                    {exercises.map((exercise,idx)=>(\r\n                        <ExerciseCard key={idx} exercise={exercise} isStudent={false}/>\r\n                    ))}\r\n                    <ExerciseCard openDialog={openDialog}/>\r\n                    <ExerciseFormDialog open={dialogOpen} handleDialogClose={handleDialogClose} \r\n                    exerciseNumber={exercises.length+1}\r\n                    exercise={exercise} setExercise={setExercise}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Exercise","F:\\MyProjects\\labtrackerfrontend\\src\\views\\staffs\\Home.js",["62","63"],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":1,"column":8,"nodeType":"70","messageId":"71","endLine":1,"endColumn":14},{"ruleId":"68","severity":1,"message":"72","line":1,"column":24,"nodeType":"70","messageId":"71","endLine":1,"endColumn":33},{"ruleId":"68","severity":1,"message":"69","line":3,"column":8,"nodeType":"70","messageId":"71","endLine":3,"endColumn":14},{"ruleId":"68","severity":1,"message":"73","line":62,"column":11,"nodeType":"70","messageId":"71","endLine":62,"endColumn":18},{"ruleId":"68","severity":1,"message":"74","line":13,"column":5,"nodeType":"70","messageId":"71","endLine":13,"endColumn":23},{"ruleId":"68","severity":1,"message":"75","line":14,"column":5,"nodeType":"70","messageId":"71","endLine":14,"endColumn":23},{"ruleId":"76","severity":1,"message":"77","line":173,"column":7,"nodeType":"78","endLine":173,"endColumn":9,"suggestions":"79"},{"ruleId":"68","severity":1,"message":"73","line":127,"column":11,"nodeType":"70","messageId":"71","endLine":127,"endColumn":18},{"ruleId":"76","severity":1,"message":"80","line":162,"column":7,"nodeType":"78","endLine":162,"endColumn":9,"suggestions":"81"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'history' is assigned a value but never used.","'KeyboardTimePicker' is defined but never used.","'KeyboardDatePicker' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'exercise' and 'exercises.length'. Either include them or remove the dependency array. You can also do a functional update 'setExercise(e => ...)' if you only need 'exercise' in the 'setExercise' call.","ArrayExpression",["84"],"React Hook useEffect has a missing dependency: 'isStaff'. Either include it or remove the dependency array.",["85"],"no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [exercise, exercises.length]",{"range":"90","text":"91"},"Update the dependencies array to be: [isStaff]",{"range":"92","text":"93"},[5826,5828],"[exercise, exercises.length]",[4766,4768],"[isStaff]"]