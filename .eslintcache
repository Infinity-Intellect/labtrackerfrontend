[{"/home/kali/Documents/labTrackerSoftware/labtrackerfrontend/src/index.js":"1","/home/kali/Documents/labTrackerSoftware/labtrackerfrontend/src/reportWebVitals.js":"2","/home/kali/Documents/labTrackerSoftware/labtrackerfrontend/src/App.js":"3","/home/kali/Documents/labTrackerSoftware/labtrackerfrontend/src/views/students/Exercise.js":"4","/home/kali/Documents/labTrackerSoftware/labtrackerfrontend/src/views/students/ExerciseDetails.js":"5","/home/kali/Documents/labTrackerSoftware/labtrackerfrontend/src/views/staffs/Exercise.js":"6","/home/kali/Documents/labTrackerSoftware/labtrackerfrontend/src/views/students/Home.js":"7","/home/kali/Documents/labTrackerSoftware/labtrackerfrontend/src/views/staffs/Home.js":"8","/home/kali/Documents/labTrackerSoftware/labtrackerfrontend/src/views/Landing.js":"9","/home/kali/Documents/labTrackerSoftware/labtrackerfrontend/src/components/Header.js":"10","/home/kali/Documents/labTrackerSoftware/labtrackerfrontend/src/components/ExerciseCard.js":"11","/home/kali/Documents/labTrackerSoftware/labtrackerfrontend/src/components/LabCard.js":"12"},{"size":500,"mtime":1608721944140,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1608721944140,"results":"15","hashOfConfig":"14"},{"size":1226,"mtime":1609269773716,"results":"16","hashOfConfig":"14"},{"size":1716,"mtime":1609269111293,"results":"17","hashOfConfig":"14"},{"size":5662,"mtime":1609296897777,"results":"18","hashOfConfig":"14"},{"size":7922,"mtime":1609269433726,"results":"19","hashOfConfig":"14"},{"size":3562,"mtime":1609268008206,"results":"20","hashOfConfig":"14"},{"size":10219,"mtime":1609269631854,"results":"21","hashOfConfig":"14"},{"size":1560,"mtime":1609268008206,"results":"22","hashOfConfig":"14"},{"size":1121,"mtime":1608793549783,"results":"23","hashOfConfig":"14"},{"size":3417,"mtime":1609269539531,"results":"24","hashOfConfig":"14"},{"size":3085,"mtime":1609268008206,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1qiotb1",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/kali/Documents/labTrackerSoftware/labtrackerfrontend/src/index.js",[],["57","58"],"/home/kali/Documents/labTrackerSoftware/labtrackerfrontend/src/reportWebVitals.js",[],"/home/kali/Documents/labTrackerSoftware/labtrackerfrontend/src/App.js",["59","60","61"],"import './App.css';\nimport {BrowserRouter as Router,Route,Switch, useHistory} from 'react-router-dom' \nimport React,{useState,useEffect} from 'react'\nimport Home from './views/students/Home'\nimport Landing from './views/Landing'\nimport Exercise from './views/students/Exercise'\nimport ExerciseDetails from './views/students/ExerciseDetails'\nimport StaffHome from './views/staffs/Home'\nimport StaffExercise from './views/staffs/Exercise'\n\nfunction App() {\n  const isStaff = false\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/home\">\n            <Home isStaff={isStaff}/>\n          </Route>\n          <Route path=\"/exercise\" component={Exercise}/>\n          <Route path=\"/exercisedetails\">\n            <ExerciseDetails isStaff={isStaff}/>\n          </Route>\n          <Route path=\"/staff/exercise\" component={StaffExercise}/>\n          <Route path=\"/staff/home\">\n            <StaffHome isStaff={isStaff}/>\n          </Route>\n          <Route path=\"/exercisedetails\">\n            <ExerciseDetails isStaff={isStaff}/>\n          </Route>\n          <Route path=\"/\">\n            <Landing isStaff = {isStaff}/>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/home/kali/Documents/labTrackerSoftware/labtrackerfrontend/src/views/students/Exercise.js",["62","63"],"import React, {useState,useEffect} from 'react'\nimport Header from '../../components/Header'\nimport ExerciseCard from '../../components/ExerciseCard'\nimport {useLocation} from 'react-router-dom'\nconst axios = require('axios')\nconst EXERCISE = [\n    {\n        exer_no:1,\n        title:\"Stacks\",\n        date_of_creation:1608814829000\n    },\n    {\n        exer_no:2,\n        title:\"Queues\",\n        date_of_creation:1608814829000\n    },\n    {\n        exer_no:3,\n        title:\"Linked List\",\n        date_of_creation:1608814829000\n    }\n]\n\nconst styles = {\n    root:{\n        display:'flex',\n        flexDirection:'column',\n        alignItems:'center',\n        width:'80%',\n        margin:\"0 auto\"\n    },\n    cardsGrid:{\n        display:'flex',\n        flexDirection:'row',\n        flexWrap:'wrap'\n    }\n}\nfunction Exercise(){\n    const [exercises,setExercises] = useState([])\n    const location = useLocation()\n    const fetchAllExercises = ()=>{\n        let labId = location.state.labId\n        axios.get(`http://localhost:3002/lab/viewAllExercise`,{\n            params:{labId:labId}\n        }).then((res)=>{\n            setExercises(res.data)\n        }).catch((err)=>{\n            console.log(\"Error fetching exercises\")\n            console.log(err)\n        })\n    } \n    useEffect(()=>{\n        fetchAllExercises()\n    },[])\n    return(\n        <div>\n            <Header/>\n            <div style={styles.root}>\n                <div style={styles.cardsGrid}>\n                    {exercises.length>0 && exercises.map((exercise,idx)=>(\n                        <ExerciseCard key={idx} exercise={exercise}/>\n                    ))}\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Exercise","/home/kali/Documents/labTrackerSoftware/labtrackerfrontend/src/views/students/ExerciseDetails.js",["64","65","66"],"/home/kali/Documents/labTrackerSoftware/labtrackerfrontend/src/views/staffs/Exercise.js",["67","68","69","70","71"],"import React, {useState,useEffect} from 'react'\nimport {useLocation} from 'react-router-dom'\nimport Header from '../../components/Header'\nimport ExerciseCard from '../../components/ExerciseCard'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport FileCopyIcon from '@material-ui/icons/FileCopy'\nimport {\n    KeyboardTimePicker,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nconst axios = require('axios')\n\nconst EXERCISE = [\n    {\n        exer_no:1,\n        title:\"Stacks\",\n        date_of_creation:1608814829000\n    },\n    {\n        exer_no:2,\n        title:\"Queues\",\n        date_of_creation:1608814829000\n    },\n    {\n        exer_no:3,\n        title:\"Linked List\",\n        date_of_creation:1608814829000\n    }\n]\n\nconst styles = {\n    root:{\n        display:'flex',\n        flexDirection:'column',\n        alignItems:'center',\n        width:'80%',\n        margin:\"0 auto\"\n    },\n    cardsGrid:{\n        display:'flex',\n        flexDirection:'row',\n        flexWrap:'wrap'\n    },\n    inputContainer:{\n        marginTop:'4%'\n    }\n}\nfunction ExerciseFormDialog({exerciseNumber,open,handleDialogClose,exercise,setExercise}){\n    const [file,setFile] = useState(null)\n    const handleInputChange = (e)=>{\n        setExercise({...exercise,[e.target.name]:e.target.value})\n    }\n    const handleFileUploadChange = (e)=>{\n        setFile({...file,[e.target.name]:e.target.files[0]})\n    }\n    const check = ()=>{\n        console.log(file)\n    }\n    return(\n        <Dialog open={open} onClose={handleDialogClose} fullWidth>\n        <DialogTitle id=\"form-dialog-title\">New Exercise</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Exercise {exerciseNumber}\n          </DialogContentText>\n          <div style={styles.inputContainer}>\n            <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"name\"\n                label=\"Exercise Name\"\n                type=\"email\"\n                name=\"title\"\n                onChange={handleInputChange}\n                fullWidth\n            />\n          </div>\n          <div style={styles.inputContainer}>\n            <TextField\n            label=\"Description\"\n            multiline\n            rows={4}\n            variant=\"outlined\"\n            name=\"prob_stmt\"\n            onChange={handleInputChange}\n            fullWidth\n            />\n          </div>\n          <div style={styles.inputContainer}>\n            <div style={{display:'flex',justifyContent:'space-between'}}>\n                <div style={{display:'flex',flexDirection:'column'}}>\n                    <Button variant=\"contained\" component=\"label\" color=\"secondary\">\n                    Upload Input File\n                    <input\n                        type=\"file\"\n                        hidden\n                        onChange={handleFileUploadChange}\n                        name=\"inputFile\"\n                    />\n                    </Button>\n                    {file&&file.inputFile&&<FileCopyIcon style={{width:80,height:80}} onClick={()=>{\n                        window.open(file.inputFile)\n                    }} onMouseEnter={(e)=>{e.target.style.cursor = \"pointer\"}}/>}\n                </div>\n                <div style={{display:'flex',flexDirection:'column'}}>\n                    <Button variant=\"contained\" component=\"label\" color=\"primary\">\n                    Upload Output File\n                    <input\n                        type=\"file\"\n                        hidden\n                        name=\"outputFile\"\n                        onChange={handleFileUploadChange}\n                    />\n                    </Button>\n                    {file&&file.outputFile&&<FileCopyIcon style={{width:80,height:80}} onClick={()=>{\n                        window.open(file.outputFile)\n                    }} onMouseEnter={(e)=>{e.target.style.cursor = \"pointer\"}}/>}\n                </div>\n            </div>\n          </div>\n          <div style={styles.inputContainer}>\n              Deadline (Number of days from today)\n             <TextField\n             label=\"Deadline\"\n             name=\"timelimit\"\n             onChange={handleInputChange}\n             fullWidth/>\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDialogClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={(e)=>{\n              handleDialogClose(e,file)\n          }} color=\"primary\">\n            Create\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n}\nfunction Exercise(){\n    const [exercises,setExercises] = useState([])\n    const [dialogOpen, setDialogOpen] = React.useState(false);\n    const [exercise,setExercise] = useState({\n        exer_no:null,\n        title:\"\",\n        date_of_creation:0\n    })\n    const location = useLocation()\n    const openDialog = () => {\n        setDialogOpen(true);\n    };\n\n    const handleDialogClose = (e,file) => {\n        if(e.target.innerHTML === \"Create\"){\n            console.log(exercise)\n            \n\n            axios.post(`http://localhost:3002/exercise/addexer`,{...exercise,date_of_creation:Date.now()*1000\n        ,labId:location.state.labId,exer_no:exercises.length+1}).then((res)=>{\n            console.log(res.data)\n                fetchAllExercises()\n                const formData = new FormData()\n                formData.append('input',file.inputFile,file.inputFile.name)\n                formData.append('output',file.outputFile,file.outputFile.name)\n                formData.append('exerId',res.data.exerId)\n                axios.post(`http://localhost:3002/exercise/uploadFiles`,formData).then((res)=>{\n                    console.log(res.data)\n                }).catch((err)=>{\n                    console.log(\"Failed To Upload\")\n                    console.log(err)\n                })\n            }).catch((err)=>{\n                console.log(err)\n            })\n            setDialogOpen(false)\n\n            setExercise({\n                exer_no:null,\n                title:\"\",\n                date_of_creation:0\n            })\n        }\n        else if(e.target.innerHTML ===\"Cancel\"){\n            setDialogOpen(false)\n        }\n        //setDialogOpen(false);\n    };  \n    const fetchAllExercises = ()=>{\n        let labId = location.state.labId\n        axios.get(`http://localhost:3002/lab/viewAllExercise`,{\n            params:{labId:labId}\n        }).then((res)=>{\n            console.log(res.data)\n            if(res.data.message === \"Lab Not Found!\"){\n                setExercises([])\n            }\n            else\n                setExercises(res.data)\n        }).catch((err)=>{\n            console.log(\"Error fetching exercises\")\n            console.log(err)\n        })\n    }  \n    useEffect(()=>{\n        fetchAllExercises()\n        // setExercises(EXERCISE)\n        setExercise({...exercise,exer_no:exercises.length+1})\n    },[])\n    return(\n        <div>\n            <Header/>\n            <div style={styles.root}>\n                <div style={styles.cardsGrid}>\n                    {exercises.length>0 && exercises.map((exercise,idx)=>(\n                        <ExerciseCard key={idx} exercise={exercise} isStudent={false}/>\n                    ))}\n                    <ExerciseCard openDialog={openDialog}/>\n                    <ExerciseFormDialog open={dialogOpen} handleDialogClose={handleDialogClose} \n                    exerciseNumber={exercises.length+1}\n                    exercise={exercise} setExercise={setExercise}/>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Exercise","/home/kali/Documents/labTrackerSoftware/labtrackerfrontend/src/views/students/Home.js",["72","73","74","75"],"import React, {useState,useEffect} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport Header from '../../components/Header'\nimport LabCard from '../../components/LabCard'\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport HistoryIcon from '@material-ui/icons/History'\nimport ListIcon from '@material-ui/icons/List'\nconst axios = require('axios')\n\nconst LAB = [\n    {\n        lab_name:\"Data structures and Algorithms\",\n        lab_code:\"15CS301\",\n        exer_ids:['1','2'],\n        year:\"2020\"\n    },\n    {\n        lab_name:\"Operating systems\",\n        lab_code:\"15CS302\",\n        exer_ids:['1','2'],\n        year:\"2020\"\n    },\n    {\n        lab_name:\"Computer Graphics\",\n        lab_code:\"15CS302\",\n        exer_ids:['1','2'],\n        year:\"2020\"\n    },\n]\nconst PLAB = [\n    {\n        lab_name:\"C Programming\",\n        lab_code:\"15CS301\",\n        exer_ids:['1','2'],\n        year:\"2019\"\n    },\n    {\n        lab_name:\"Operating systems\",\n        lab_code:\"15CS302\",\n        exer_ids:['1','2'],\n        year:\"2019\"\n    },\n]\n\nconst styles={\n    root:{\n        display:'flex',\n        flexDirection:'column',\n        alignItems:'center',\n        width:'80%',\n        margin:\"0 auto\"\n    },\n    cardsGrid:{\n        display:'flex',\n        flexDirection:'row',\n        flexWrap:'wrap'\n    }\n}\nfunction Home() {\n    const history = useHistory()\n    const [currentLabs,setCurrentLabs] = useState([])\n    const [pastLabs,setPastLabs] = useState([])\n    const [tabValue,setTabValue] = useState(0)\n    const [studentId] = useState(3)\n    const handleTabChange = (event,newValue)=>{\n        setTabValue(newValue)\n    }\n    const fetchAllLabs = ()=>{\n        axios.get('http://localhost:3002/student/viewAllLabs',{\n            params:{studentId:studentId}\n        }).then((res)=>{\n            console.log(res.data)\n            setCurrentLabs(res.data)\n        }).catch((err)=>{\n            console.log(\"Error fetching all labs\")\n            console.log(err)\n        })\n    }\n    useEffect(()=>{\n        //TODO:Assign Student ID from local storage based on google id\n        fetchAllLabs()\n        setPastLabs(PLAB)\n    },[])\n    return (\n        <div>\n            <Header/>\n            <div style={styles.root}>\n                <Paper square>\n                    <Tabs\n                        value={tabValue}\n                        indicatorColor=\"secondary\"\n                        textColor=\"secondary\"\n                        onChange={handleTabChange}\n                    >\n                        <Tab label=\"Current\" icon={<ListIcon/>}/>\n                        <Tab label=\"Past\" icon={<HistoryIcon/>}/>\n                    </Tabs>\n                </Paper>\n                <div style={styles.cardsGrid}>\n                    {tabValue === 0 && ((currentLabs.length>0 && currentLabs.map((lab,idx)=>(\n                        <LabCard key={idx} lab={lab}/>\n                    )))||(currentLabs.length===0 && \n                    <div style={{padding:100}}>\n                        No Current Labs !\n                    </div>))}\n                    {tabValue === 1 && ((pastLabs.length>0 && pastLabs.map((lab,idx)=>(\n                        <LabCard key={idx} lab={lab}/>\n                    )))||(pastLabs.length===0 && \n                    <div style={{padding:100}}>\n                        No Past Labs !\n                    </div>))}\n                </div>\n            </div>\n        </div>\n\n    )\n}\nexport default Home","/home/kali/Documents/labTrackerSoftware/labtrackerfrontend/src/views/staffs/Home.js",["76","77","78","79","80"],"import React, {useState,useEffect} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport Header from '../../components/Header'\nimport LabCard from '../../components/LabCard'\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport HistoryIcon from '@material-ui/icons/History'\nimport ListIcon from '@material-ui/icons/List'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField'\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nconst axios = require('axios')\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n      },\n    },\n  };\nconst LAB = [\n    {\n        lab_name:\"Data structures and Algorithms\",\n        lab_code:\"15CS301\",\n        exer_ids:['1','2'],\n        year:\"2020\"\n    },\n    {\n        lab_name:\"Operating systems\",\n        lab_code:\"15CS302\",\n        exer_ids:['1','2'],\n        year:\"2020\"\n    },\n    {\n        lab_name:\"Computer Graphics\",\n        lab_code:\"15CS302\",\n        exer_ids:['1','2'],\n        year:\"2020\"\n    },\n]\nconst PLAB = [\n    {\n        lab_name:\"C Programming\",\n        lab_code:\"15CS301\",\n        exer_ids:['1','2'],\n        year:\"2019\"\n    },\n    {\n        lab_name:\"Operating systems\",\n        lab_code:\"15CS302\",\n        exer_ids:['1','2'],\n        year:\"2019\"\n    },\n]\n\nconst styles={\n    root:{\n        display:'flex',\n        flexDirection:'column',\n        alignItems:'center',\n        width:'80%',\n        margin:\"0 auto\"\n    },\n    cardsGrid:{\n        display:'flex',\n        flexDirection:'row',\n        flexWrap:'wrap'\n    },\n    inputContainer:{\n        marginTop:'4%'\n    }\n}\nconst STUDENTS = [\n    {\n        studentId:'3'\n    },\n    {\n        studentId:'4'\n    }\n]\nconst STAFFS = [\n    {\n        staffId:'1'\n    },\n    {\n        staffId:'2'\n    }\n]\nfunction LabFormDialog({open,handleDialogClose,lab,setLab,students,staffs}){\n    const [selectedStudents,setSelectedStudents] = useState([])\n    const [selectedStaffs,setSelectedStaffs] = useState([])\n    const handleInputChange = (e)=>{\n        setLab({...lab,[e.target.name]:e.target.value})\n    }\n    return(\n        <Dialog open={open} onClose={handleDialogClose} aria-labelledby=\"form-dialog-title\" fullWidth>\n        <DialogTitle id=\"form-dialog-title\">Add New Lab</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Year {4}\n          </DialogContentText>\n          <div style={styles.inputContainer}>\n            <TextField\n                autoFocus\n                margin=\"dense\"\n                name=\"lab_name\"\n                label=\"Lab Name\"\n                value={lab.lab_name}\n                onChange={handleInputChange}\n                fullWidth\n            />\n          </div>\n          <div style={styles.inputContainer}>\n            <FormControl fullWidth>\n                <InputLabel id=\"demo-mutiple-name-label\">Staffs</InputLabel>\n                <Select\n                labelId=\"demo-mutiple-name-label\"\n                id=\"demo-mutiple-name\"\n                multiple\n                value={selectedStaffs}\n                onChange={(event)=>{\n                    setSelectedStaffs(event.target.value)\n                }}\n                input={<Input />}\n                MenuProps={MenuProps}\n                >\n                {staffs.map((staff) => (\n                    <MenuItem key={staff.staffId} value={staff.staffId}>\n                    {staff.staffId}\n                    </MenuItem>\n                ))}\n                </Select>\n            </FormControl>\n          </div>\n          <div style={styles.inputContainer}>\n            <FormControl fullWidth>\n                <InputLabel id=\"demo-mutiple-name-label\">Students</InputLabel>\n                <Select\n                labelId=\"demo-mutiple-name-label\"\n                id=\"demo-mutiple-name\"\n                multiple\n                onChange={(event)=>{\n                    setSelectedStudents(event.target.value)\n                }}\n                value={selectedStudents}\n                input={<Input />}\n                MenuProps={MenuProps}\n                >\n                {students.map((student) => (\n                    <MenuItem key={student.studentId} value={student.studentId}>\n                    {student.studentId}\n                    </MenuItem>\n                ))}\n                </Select>\n            </FormControl>\n          </div>\n          <div style={styles.inputContainer}>\n            <TextField\n                margin=\"dense\"\n                label=\"Lab Code\"\n                value={lab.lab_code}\n                onChange={handleInputChange}\n                name=\"lab_code\"\n                fullWidth\n            />\n          </div>\n          <div style={styles.inputContainer}>\n            <TextField\n            label=\"Description\"\n            multiline\n            name=\"lab_description\"\n            value={lab.lab_description}\n            onChange={handleInputChange}\n            rows={4}\n            variant=\"outlined\"\n            fullWidth\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDialogClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button id=\"create\" onClick={(e)=>{\n              console.log(selectedStudents)\n              handleDialogClose(e,selectedStaffs,selectedStudents)\n          }} color=\"primary\">\n            Create\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n}\nfunction Home({isStaff}) {\n    const history = useHistory()\n    const [currentLabs,setCurrentLabs] = useState([])\n    const [pastLabs,setPastLabs] = useState([])\n    const [tabValue,setTabValue] = useState(0)\n    const [dialogOpen, setDialogOpen] = React.useState(false);\n    const [students,setStudents] = useState([])\n    const [staffs,setStaffs] = useState([])\n    const [lab,setLab ] =useState({\n        lab_name:\"\",\n        lab_description:\"\",\n        lab_code:\"\"\n    })\n    const [staffId] = useState(1)\n    const openDialog = () => {\n        setDialogOpen(true);\n        console.log(\"OPEN DIALOG\")\n    };\n\n    const handleDialogClose = (e,selectedStaffs,selectedStudents) => {\n        if(e.target.innerHTML === \"Create\"){\n            axios.post(`http://localhost:3002/lab/addlab`,{...lab,student_ids:selectedStudents,staff_ids:selectedStaffs}).then((res)=>{\n                console.log(res)\n                fetchAllLabs()\n            }).catch((err)=>{\n                console.log(\"Error adding new lab\")\n                console.log(err)\n            })\n            setLab({\n                lab_name:\"\",\n                lab_description:\"\",\n                lab_code:\"\",\n                student_ids:[],\n                staff_ids:[]\n            })\n\n        }\n        setDialogOpen(false);\n    };\n    const handleTabChange = (event,newValue)=>{\n        setTabValue(newValue)\n    }\n    const fetchAllLabs = ()=>{\n        axios.get('http://localhost:3002/staff/viewAllLabs',{\n            params:{staffId:staffId}\n        }).then((res)=>{\n            console.log(res.data)\n            setCurrentLabs(res.data)\n        }).catch((err)=>{\n            console.log(\"Error fetching all labs\")\n            console.log(err)\n        })\n    }\n    const fetchAllStudents = ()=>{\n        axios.get(`http://localhost:3002/student/allStudents`).then((res)=>{\n            setStudents(res.data)\n        }).catch((err)=>{\n            console.log(\"Error fetching students\")\n            console.log(err)\n        })\n    }\n    const fetchAllStaffs = ()=>{\n        axios.get(`http://localhost:3002/staff/allStaffs`).then((res)=>{\n            setStaffs(res.data)\n        }).catch((err)=>{\n            console.log(\"Error fetching students\")\n            console.log(err)\n        })\n    }\n    useEffect(()=>{\n      //setCurrentLabs(LAB)\n      //setStaffs(STAFFS)\n      //setStudents(STUDENTS)\n      fetchAllStaffs()\n      fetchAllStudents()\n      setPastLabs(PLAB)\n      fetchAllLabs()\n      console.log(\"Is staff \"+isStaff)\n    },[])\n    return (\n        <div>\n            <Header/>\n            <div style={styles.root}>\n                <Paper square>\n                    <Tabs\n                        value={tabValue}\n                        indicatorColor=\"secondary\"\n                        textColor=\"secondary\"\n                        onChange={handleTabChange}\n                    >\n                        <Tab label=\"Current\" icon={<ListIcon/>}/>\n                        <Tab label=\"Past\" icon={<HistoryIcon/>}/>\n                    </Tabs>\n                </Paper>\n                <div style={styles.cardsGrid}>\n                    {tabValue === 0 && ((currentLabs.length>0 && currentLabs.map((lab,idx)=>(\n                        <LabCard key={idx} lab={lab} isStudent={!isStaff}/>\n                    )))||(currentLabs.length===0 && \n                    <div style={{padding:100}}>\n                        No Current Labs !\n                    </div>))}\n                    {tabValue === 1 && ((pastLabs.length>0 && pastLabs.map((lab,idx)=>(\n                        <LabCard key={idx} lab={lab} isStudent={!isStaff}/>\n                    )))||(pastLabs.length===0 && \n                    <div style={{padding:100}}>\n                        No Past Labs !\n                    </div>))}\n                    <LabCard openDialog={openDialog}/>\n                    {lab&&<LabFormDialog open={dialogOpen} handleDialogClose={handleDialogClose}\n                    lab={lab} setLab = {setLab}\n                    students={students} staffs={staffs}/>}\n                </div>\n            </div>\n        </div>\n\n    )\n}\nexport default Home","/home/kali/Documents/labTrackerSoftware/labtrackerfrontend/src/views/Landing.js",["81"],"import Button from '@material-ui/core/Button';\nimport {useHistory} from 'react-router-dom'\nimport Header from '../components/Header'\nimport GoogleLogin from 'react-google-login'\nconst styles = {\n    root:{\n        display:'flex',\n        justifyContent:'center',\n        alignItems: \"center\",\n        minHeight: \"80vh\",\n    }\n}\nfunction Landing({isStaff,email,setIsStaff}) {\n    const history = useHistory()\n    const login = (response)=>{\n        // if(response.profileObj.email === \"snavaneetharan_cs@mepcoeng.ac.in\")\n        // {\n        //     history.push('staff/home')\n        //     setIsStaff(true)\n        // }\n        // else if(response.profileObj.email ===\"snavaneetharan@gmail.com\" )\n        // {\n        //     history.push('home')\n        // }\n        console.log(\"IN login \"+isStaff)\n        if(isStaff)\n        {\n            history.push('staff/home')\n            //setIsStaff(true)\n        }\n        else if(!isStaff)\n        {\n            history.push('home')\n        }\n    }\n    return (\n        <div>\n            <Header/>\n            <div style={styles.root} >\n                <GoogleLogin\n                    clientId=\"640502146036-cka0dnokfevuk9h7okin78pl91aijtbq.apps.googleusercontent.com\"\n                    buttonText=\"Sign In With Google\"\n                    onSuccess={login}\n                    onFailure={login}\n                    theme=\"dark\"\n                />\n                {/* <Button onClick={login} variant=\"contained\" color=\"primary\">Login</Button> */}\n            </div>\n        </div>\n    )\n}\nexport default Landing","/home/kali/Documents/labTrackerSoftware/labtrackerfrontend/src/components/Header.js",[],"/home/kali/Documents/labTrackerSoftware/labtrackerfrontend/src/components/ExerciseCard.js",[],"/home/kali/Documents/labTrackerSoftware/labtrackerfrontend/src/components/LabCard.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":2,"column":47,"nodeType":"88","messageId":"89","endLine":2,"endColumn":57},{"ruleId":"86","severity":1,"message":"90","line":3,"column":15,"nodeType":"88","messageId":"89","endLine":3,"endColumn":23},{"ruleId":"86","severity":1,"message":"91","line":3,"column":24,"nodeType":"88","messageId":"89","endLine":3,"endColumn":33},{"ruleId":"86","severity":1,"message":"92","line":6,"column":7,"nodeType":"88","messageId":"89","endLine":6,"endColumn":15},{"ruleId":"93","severity":1,"message":"94","line":54,"column":7,"nodeType":"95","endLine":54,"endColumn":9,"suggestions":"96"},{"ruleId":"86","severity":1,"message":"97","line":10,"column":8,"nodeType":"88","messageId":"89","endLine":10,"endColumn":23},{"ruleId":"86","severity":1,"message":"98","line":14,"column":7,"nodeType":"88","messageId":"89","endLine":14,"endColumn":23},{"ruleId":"93","severity":1,"message":"99","line":77,"column":7,"nodeType":"95","endLine":77,"endColumn":9,"suggestions":"100"},{"ruleId":"86","severity":1,"message":"101","line":14,"column":5,"nodeType":"88","messageId":"89","endLine":14,"endColumn":23},{"ruleId":"86","severity":1,"message":"102","line":15,"column":5,"nodeType":"88","messageId":"89","endLine":15,"endColumn":23},{"ruleId":"86","severity":1,"message":"92","line":19,"column":7,"nodeType":"88","messageId":"89","endLine":19,"endColumn":15},{"ruleId":"86","severity":1,"message":"103","line":62,"column":11,"nodeType":"88","messageId":"89","endLine":62,"endColumn":16},{"ruleId":"93","severity":1,"message":"104","line":217,"column":7,"nodeType":"95","endLine":217,"endColumn":9,"suggestions":"105"},{"ruleId":"86","severity":1,"message":"106","line":3,"column":8,"nodeType":"88","messageId":"89","endLine":3,"endColumn":14},{"ruleId":"86","severity":1,"message":"107","line":13,"column":7,"nodeType":"88","messageId":"89","endLine":13,"endColumn":10},{"ruleId":"86","severity":1,"message":"108","line":63,"column":11,"nodeType":"88","messageId":"89","endLine":63,"endColumn":18},{"ruleId":"93","severity":1,"message":"109","line":86,"column":7,"nodeType":"95","endLine":86,"endColumn":9,"suggestions":"110"},{"ruleId":"86","severity":1,"message":"107","line":34,"column":7,"nodeType":"88","messageId":"89","endLine":34,"endColumn":10},{"ruleId":"86","severity":1,"message":"111","line":86,"column":7,"nodeType":"88","messageId":"89","endLine":86,"endColumn":15},{"ruleId":"86","severity":1,"message":"112","line":94,"column":7,"nodeType":"88","messageId":"89","endLine":94,"endColumn":13},{"ruleId":"86","severity":1,"message":"108","line":208,"column":11,"nodeType":"88","messageId":"89","endLine":208,"endColumn":18},{"ruleId":"93","severity":1,"message":"113","line":285,"column":7,"nodeType":"95","endLine":285,"endColumn":9,"suggestions":"114"},{"ruleId":"86","severity":1,"message":"106","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":14},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'EXERCISE' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchAllExercises'. Either include it or remove the dependency array.","ArrayExpression",["117"],"'CheckCircleIcon' is defined but never used.","'problemStatement' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'isStaff' and 'location.state'. Either include them or remove the dependency array.",["118"],"'KeyboardTimePicker' is defined but never used.","'KeyboardDatePicker' is defined but never used.","'check' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'exercise', 'exercises.length', and 'fetchAllExercises'. Either include them or remove the dependency array. You can also do a functional update 'setExercise(e => ...)' if you only need 'exercise' in the 'setExercise' call.",["119"],"'Button' is defined but never used.","'LAB' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchAllLabs'. Either include it or remove the dependency array.",["120"],"'STUDENTS' is assigned a value but never used.","'STAFFS' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchAllLabs' and 'isStaff'. Either include them or remove the dependency array.",["121"],"no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},"Update the dependencies array to be: [fetchAllExercises]",{"range":"132","text":"133"},"Update the dependencies array to be: [isStaff, location.state]",{"range":"134","text":"135"},"Update the dependencies array to be: [exercise, exercises.length, fetchAllExercises]",{"range":"136","text":"137"},"Update the dependencies array to be: [fetchAllLabs]",{"range":"138","text":"139"},"Update the dependencies array to be: [fetchAllLabs, isStaff]",{"range":"140","text":"141"},[1322,1324],"[fetchAllExercises]",[2977,2979],"[isStaff, location.state]",[7229,7231],"[exercise, exercises.length, fetchAllExercises]",[2254,2256],"[fetchAllLabs]",[8610,8612],"[fetchAllLabs, isStaff]"]