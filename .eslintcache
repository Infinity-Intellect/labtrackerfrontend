[{"F:\\MyProjects\\labtrackerfrontend\\src\\index.js":"1","F:\\MyProjects\\labtrackerfrontend\\src\\App.js":"2","F:\\MyProjects\\labtrackerfrontend\\src\\reportWebVitals.js":"3","F:\\MyProjects\\labtrackerfrontend\\src\\views\\Landing.js":"4","F:\\MyProjects\\labtrackerfrontend\\src\\views\\students\\Exercise.js":"5","F:\\MyProjects\\labtrackerfrontend\\src\\views\\students\\ExerciseDetails.js":"6","F:\\MyProjects\\labtrackerfrontend\\src\\views\\students\\Home.js":"7","F:\\MyProjects\\labtrackerfrontend\\src\\components\\LabCard.js":"8","F:\\MyProjects\\labtrackerfrontend\\src\\components\\Header.js":"9","F:\\MyProjects\\labtrackerfrontend\\src\\components\\ExerciseCard.js":"10","F:\\MyProjects\\labtrackerfrontend\\src\\views\\staffs\\Exercise.js":"11","F:\\MyProjects\\labtrackerfrontend\\src\\views\\staffs\\Home.js":"12"},{"size":517,"mtime":1608944703778,"results":"13","hashOfConfig":"14"},{"size":1266,"mtime":1609266991604,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1608944703786,"results":"16","hashOfConfig":"14"},{"size":1611,"mtime":1609266975079,"results":"17","hashOfConfig":"14"},{"size":1761,"mtime":1609248443334,"results":"18","hashOfConfig":"14"},{"size":5312,"mtime":1609266504965,"results":"19","hashOfConfig":"14"},{"size":3682,"mtime":1609247989833,"results":"20","hashOfConfig":"14"},{"size":3181,"mtime":1609266769812,"results":"21","hashOfConfig":"14"},{"size":1163,"mtime":1608944703766,"results":"22","hashOfConfig":"14"},{"size":3459,"mtime":1609245638138,"results":"23","hashOfConfig":"14"},{"size":8156,"mtime":1609266365825,"results":"24","hashOfConfig":"14"},{"size":10540,"mtime":1609266281688,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"kjkjen",{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},"F:\\MyProjects\\labtrackerfrontend\\src\\index.js",[],["56","57"],"F:\\MyProjects\\labtrackerfrontend\\src\\App.js",["58","59","60"],"F:\\MyProjects\\labtrackerfrontend\\src\\reportWebVitals.js",[],"F:\\MyProjects\\labtrackerfrontend\\src\\views\\Landing.js",["61"],"F:\\MyProjects\\labtrackerfrontend\\src\\views\\students\\Exercise.js",["62","63"],"import React, {useState,useEffect} from 'react'\r\nimport Header from '../../components/Header'\r\nimport ExerciseCard from '../../components/ExerciseCard'\r\nimport {useLocation} from 'react-router-dom'\r\nconst axios = require('axios')\r\nconst EXERCISE = [\r\n    {\r\n        exer_no:1,\r\n        title:\"Stacks\",\r\n        date_of_creation:1608814829000\r\n    },\r\n    {\r\n        exer_no:2,\r\n        title:\"Queues\",\r\n        date_of_creation:1608814829000\r\n    },\r\n    {\r\n        exer_no:3,\r\n        title:\"Linked List\",\r\n        date_of_creation:1608814829000\r\n    }\r\n]\r\n\r\nconst styles = {\r\n    root:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        width:'80%',\r\n        margin:\"0 auto\"\r\n    },\r\n    cardsGrid:{\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        flexWrap:'wrap'\r\n    }\r\n}\r\nfunction Exercise(){\r\n    const [exercises,setExercises] = useState([])\r\n    const location = useLocation()\r\n    const fetchAllExercises = ()=>{\r\n        let labId = location.state.labId\r\n        axios.get(`http://localhost:3002/lab/viewAllExercise`,{\r\n            params:{labId:labId}\r\n        }).then((res)=>{\r\n            setExercises(res.data)\r\n        }).catch((err)=>{\r\n            console.log(\"Error fetching exercises\")\r\n            console.log(err)\r\n        })\r\n    } \r\n    useEffect(()=>{\r\n        fetchAllExercises()\r\n    },[])\r\n    return(\r\n        <div>\r\n            <Header/>\r\n            <div style={styles.root}>\r\n                <div style={styles.cardsGrid}>\r\n                    {exercises.map((exercise,idx)=>(\r\n                        <ExerciseCard key={idx} exercise={exercise}/>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Exercise","F:\\MyProjects\\labtrackerfrontend\\src\\views\\students\\ExerciseDetails.js",["64","65","66"],"import React,{useState,useEffect} from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport {useLocation} from 'react-router-dom'\r\nimport Header from '../../components/Header'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy'\r\nconst axios = require('axios')\r\nconst problemStatement = `Problem Statement: Consider a permutation of numbers from 1 to N written on a paper. Let’s denote the product of its element as ‘prod’ and the sum of its elements as ‘sum’. Given a positive integer N, your task is to determine whether ‘prod’ is divisible by ‘sum’ or not.\r\n\r\nInput Format: First input will be an integer T.  It depicts a number of test cases. Followed by value for each test case. Each test case will contain an integer N (1<= N <=10^9). It is nothing but the length of the permutation.\r\n\r\nOutput Format: For each test case, print “YEAH” if ‘prod’ is divisible by ‘sum’, otherwise print “NAH”.`\r\nconst styles = {\r\n    root:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        width:'80%',\r\n        margin:\"0 auto\"\r\n    }\r\n}\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      minWidth: '100%',\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  });\r\n\r\nexport default function ExerciseDetails({isStaff}){\r\n    const classes = useStyles()\r\n    const location = useLocation()\r\n    const [file,setFile] = useState(null)\r\n    const [isVerified,setIsVerified] = useState(false)\r\n    const [exercise,setExercise] = useState(null)\r\n    const [verifiedResult,setVerifiedResult] = useState(\"\")\r\n    const handleInputFileChange = (e)=>{\r\n        setFile(e.target.files[0])\r\n    }\r\n    const onVerificationClick = ()=>{\r\n        let formData = new FormData()\r\n        formData.append('program',file)\r\n        formData.append('exerId',exercise.exerId)\r\n        formData.append('studentId',3)\r\n        axios.post(`http://localhost:3002/exercise/verifyprogram`,formData).then((res)=>{\r\n            setVerifiedResult(res.data)\r\n            setIsVerified(true)\r\n            console.log(res.data)\r\n        }).catch((err)=>{\r\n            console.log(\"Error verifying\")\r\n            console.log(err)\r\n        })\r\n    }\r\n    useEffect(()=>{\r\n        console.log(\"Location state\")\r\n        console.log(location.state)\r\n        setExercise(location.state.exercise)\r\n        console.log(\"in exer details is staff \"+isStaff)\r\n    },[])\r\n    if(exercise!==null)\r\n    {\r\n        return(\r\n            <div>\r\n                <Header/>\r\n                <div style={styles.root}>\r\n                <Card className={classes.root}>\r\n                    <CardContent>\r\n                        <div style={{display:'flex',justifyContent:'center'}}>\r\n                            <h1>{exercise.title}</h1>\r\n                        </div>\r\n                        <div style={{display:'flex',justifyContent:'center'}}>\r\n                            <Typography>{exercise.prob_stmt}</Typography>\r\n                        </div>\r\n                    </CardContent>\r\n                {!isStaff && <CardActions style={{justifyContent:'center'}}>\r\n                    <Button variant=\"contained\" component=\"label\" color=\"secondary\">\r\n                        Upload\r\n                        <input\r\n                            type=\"file\"\r\n                            hidden\r\n                            name=\"studentFile\"\r\n                            onChange={handleInputFileChange}\r\n                        />\r\n                    </Button>\r\n                    <Button variant=\"contained\" onClick={onVerificationClick}>Verify</Button>\r\n                </CardActions>}\r\n                {file && <div style={{display:'flex',justifyContent:'center'}}>\r\n                    <FileCopyIcon style={{width:100,height:100}} onMouseEnter={(e)=>{e.target.style.cursor=\"pointer\"}}\r\n                onClick={()=>{window.open(file)}}/>\r\n                </div>}\r\n                {file&&isVerified&&<CardContent>\r\n                    <div style={{display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center'}}>\r\n                        <div>\r\n                            <h3>Verified</h3>\r\n                        </div>\r\n                        {/* <div>\r\n                            <CheckCircleIcon style={{width:25,height:25,color:'green'}}/>\r\n                        </div> */}\r\n                        <div>\r\n                            <Typography style={{color:verifiedResult!=='All cases passed!'?'red':'green'}}>\r\n                                {verifiedResult}\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n                </CardContent>}\r\n                </Card>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return <div>Loading ...</div>\r\n    }\r\n    \r\n}","F:\\MyProjects\\labtrackerfrontend\\src\\views\\students\\Home.js",["67","68","69","70"],"import React, {useState,useEffect} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button'\r\nimport Header from '../../components/Header'\r\nimport LabCard from '../../components/LabCard'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport HistoryIcon from '@material-ui/icons/History'\r\nimport ListIcon from '@material-ui/icons/List'\r\nconst axios = require('axios')\r\n\r\nconst LAB = [\r\n    {\r\n        lab_name:\"Data structures and Algorithms\",\r\n        lab_code:\"15CS301\",\r\n        exer_ids:['1','2'],\r\n        year:\"2020\"\r\n    },\r\n    {\r\n        lab_name:\"Operating systems\",\r\n        lab_code:\"15CS302\",\r\n        exer_ids:['1','2'],\r\n        year:\"2020\"\r\n    },\r\n    {\r\n        lab_name:\"Computer Graphics\",\r\n        lab_code:\"15CS302\",\r\n        exer_ids:['1','2'],\r\n        year:\"2020\"\r\n    },\r\n]\r\nconst PLAB = [\r\n    {\r\n        lab_name:\"C Programming\",\r\n        lab_code:\"15CS301\",\r\n        exer_ids:['1','2'],\r\n        year:\"2019\"\r\n    },\r\n    {\r\n        lab_name:\"Operating systems\",\r\n        lab_code:\"15CS302\",\r\n        exer_ids:['1','2'],\r\n        year:\"2019\"\r\n    },\r\n]\r\n\r\nconst styles={\r\n    root:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        width:'80%',\r\n        margin:\"0 auto\"\r\n    },\r\n    cardsGrid:{\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        flexWrap:'wrap'\r\n    }\r\n}\r\nfunction Home() {\r\n    const history = useHistory()\r\n    const [currentLabs,setCurrentLabs] = useState([])\r\n    const [pastLabs,setPastLabs] = useState([])\r\n    const [tabValue,setTabValue] = useState(0)\r\n    const [studentId] = useState(3)\r\n    const handleTabChange = (event,newValue)=>{\r\n        setTabValue(newValue)\r\n    }\r\n    const fetchAllLabs = ()=>{\r\n        axios.get('http://localhost:3002/student/viewAllLabs',{\r\n            params:{studentId:studentId}\r\n        }).then((res)=>{\r\n            console.log(res.data)\r\n            setCurrentLabs(res.data)\r\n        }).catch((err)=>{\r\n            console.log(\"Error fetching all labs\")\r\n            console.log(err)\r\n        })\r\n    }\r\n    useEffect(()=>{\r\n        //TODO:Assign Student ID from local storage based on google id\r\n        fetchAllLabs()\r\n        setPastLabs(PLAB)\r\n    },[])\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <div style={styles.root}>\r\n                <Paper square>\r\n                    <Tabs\r\n                        value={tabValue}\r\n                        indicatorColor=\"secondary\"\r\n                        textColor=\"secondary\"\r\n                        onChange={handleTabChange}\r\n                    >\r\n                        <Tab label=\"Current\" icon={<ListIcon/>}/>\r\n                        <Tab label=\"Past\" icon={<HistoryIcon/>}/>\r\n                    </Tabs>\r\n                </Paper>\r\n                <div style={styles.cardsGrid}>\r\n                    {tabValue === 0 && ((currentLabs.length>0 && currentLabs.map((lab,idx)=>(\r\n                        <LabCard key={idx} lab={lab}/>\r\n                    )))||(currentLabs.length===0 && \r\n                    <div style={{padding:100}}>\r\n                        No Current Labs !\r\n                    </div>))}\r\n                    {tabValue === 1 && ((pastLabs.length>0 && pastLabs.map((lab,idx)=>(\r\n                        <LabCard key={idx} lab={lab}/>\r\n                    )))||(pastLabs.length===0 && \r\n                    <div style={{padding:100}}>\r\n                        No Past Labs !\r\n                    </div>))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Home","F:\\MyProjects\\labtrackerfrontend\\src\\components\\LabCard.js",[],"F:\\MyProjects\\labtrackerfrontend\\src\\components\\Header.js",[],"F:\\MyProjects\\labtrackerfrontend\\src\\components\\ExerciseCard.js",[],"F:\\MyProjects\\labtrackerfrontend\\src\\views\\staffs\\Exercise.js",["71","72","73","74","75"],"import React, {useState,useEffect} from 'react'\r\nimport {useLocation} from 'react-router-dom'\r\nimport Header from '../../components/Header'\r\nimport ExerciseCard from '../../components/ExerciseCard'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy'\r\nimport {\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nconst axios = require('axios')\r\n\r\nconst EXERCISE = [\r\n    {\r\n        exer_no:1,\r\n        title:\"Stacks\",\r\n        date_of_creation:1608814829000\r\n    },\r\n    {\r\n        exer_no:2,\r\n        title:\"Queues\",\r\n        date_of_creation:1608814829000\r\n    },\r\n    {\r\n        exer_no:3,\r\n        title:\"Linked List\",\r\n        date_of_creation:1608814829000\r\n    }\r\n]\r\n\r\nconst styles = {\r\n    root:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        width:'80%',\r\n        margin:\"0 auto\"\r\n    },\r\n    cardsGrid:{\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        flexWrap:'wrap'\r\n    },\r\n    inputContainer:{\r\n        marginTop:'4%'\r\n    }\r\n}\r\nfunction ExerciseFormDialog({exerciseNumber,open,handleDialogClose,exercise,setExercise}){\r\n    const [file,setFile] = useState(null)\r\n    const handleInputChange = (e)=>{\r\n        setExercise({...exercise,[e.target.name]:e.target.value})\r\n    }\r\n    const handleFileUploadChange = (e)=>{\r\n        setFile({...file,[e.target.name]:e.target.files[0]})\r\n    }\r\n    const check = ()=>{\r\n        console.log(file)\r\n    }\r\n    return(\r\n        <Dialog open={open} onClose={handleDialogClose} fullWidth>\r\n        <DialogTitle id=\"form-dialog-title\">New Exercise</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Exercise {exerciseNumber}\r\n          </DialogContentText>\r\n          <div style={styles.inputContainer}>\r\n            <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label=\"Exercise Name\"\r\n                type=\"email\"\r\n                name=\"title\"\r\n                onChange={handleInputChange}\r\n                fullWidth\r\n            />\r\n          </div>\r\n          <div style={styles.inputContainer}>\r\n            <TextField\r\n            label=\"Description\"\r\n            multiline\r\n            rows={4}\r\n            variant=\"outlined\"\r\n            name=\"prob_stmt\"\r\n            onChange={handleInputChange}\r\n            fullWidth\r\n            />\r\n          </div>\r\n          <div style={styles.inputContainer}>\r\n            <div style={{display:'flex',justifyContent:'space-between'}}>\r\n                <div style={{display:'flex',flexDirection:'column'}}>\r\n                    <Button variant=\"contained\" component=\"label\" color=\"secondary\">\r\n                    Upload Input File\r\n                    <input\r\n                        type=\"file\"\r\n                        hidden\r\n                        onChange={handleFileUploadChange}\r\n                        name=\"inputFile\"\r\n                    />\r\n                    </Button>\r\n                    {file&&file.inputFile&&<FileCopyIcon style={{width:80,height:80}} onClick={()=>{\r\n                        window.open(file.inputFile)\r\n                    }} onMouseEnter={(e)=>{e.target.style.cursor = \"pointer\"}}/>}\r\n                </div>\r\n                <div style={{display:'flex',flexDirection:'column'}}>\r\n                    <Button variant=\"contained\" component=\"label\" color=\"primary\">\r\n                    Upload Output File\r\n                    <input\r\n                        type=\"file\"\r\n                        hidden\r\n                        name=\"outputFile\"\r\n                        onChange={handleFileUploadChange}\r\n                    />\r\n                    </Button>\r\n                    {file&&file.outputFile&&<FileCopyIcon style={{width:80,height:80}} onClick={()=>{\r\n                        window.open(file.outputFile)\r\n                    }} onMouseEnter={(e)=>{e.target.style.cursor = \"pointer\"}}/>}\r\n                </div>\r\n            </div>\r\n          </div>\r\n          <div style={styles.inputContainer}>\r\n              Deadline (Number of days from today)\r\n             <TextField\r\n             label=\"Deadline\"\r\n             name=\"timelimit\"\r\n             onChange={handleInputChange}\r\n             fullWidth/>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDialogClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={(e)=>{\r\n              handleDialogClose(e,file)\r\n          }} color=\"primary\">\r\n            Create\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    )\r\n}\r\nfunction Exercise(){\r\n    const [exercises,setExercises] = useState([])\r\n    const [dialogOpen, setDialogOpen] = React.useState(false);\r\n    const [exercise,setExercise] = useState({\r\n        exer_no:null,\r\n        title:\"\",\r\n        date_of_creation:0\r\n    })\r\n    const location = useLocation()\r\n    const openDialog = () => {\r\n        setDialogOpen(true);\r\n    };\r\n\r\n    const handleDialogClose = (e,file) => {\r\n        if(e.target.innerHTML === \"Create\"){\r\n            console.log(exercise)\r\n            \r\n\r\n            axios.post(`http://localhost:3002/exercise/addexer`,{...exercise,date_of_creation:Date.now()*1000\r\n        ,labId:location.state.labId,exer_no:exercises.length+1}).then((res)=>{\r\n            console.log(res.data)\r\n                fetchAllExercises()\r\n                const formData = new FormData()\r\n                formData.append('input',file.inputFile,file.inputFile.name)\r\n                formData.append('output',file.outputFile,file.outputFile.name)\r\n                formData.append('exerId',res.data.exerId)\r\n                axios.post(`http://localhost:3002/exercise/uploadFiles`,formData).then((res)=>{\r\n                    console.log(res.data)\r\n                }).catch((err)=>{\r\n                    console.log(\"Failed To Upload\")\r\n                    console.log(err)\r\n                })\r\n            }).catch((err)=>{\r\n                console.log(err)\r\n            })\r\n            setDialogOpen(false)\r\n\r\n            setExercise({\r\n                exer_no:null,\r\n                title:\"\",\r\n                date_of_creation:0\r\n            })\r\n        }\r\n        else if(e.target.innerHTML ===\"Cancel\"){\r\n            setDialogOpen(false)\r\n        }\r\n        //setDialogOpen(false);\r\n    };  \r\n    const fetchAllExercises = ()=>{\r\n        let labId = location.state.labId\r\n        axios.get(`http://localhost:3002/lab/viewAllExercise`,{\r\n            params:{labId:labId}\r\n        }).then((res)=>{\r\n            console.log(res.data)\r\n            if(res.data.message === \"Lab Not Found!\"){\r\n                setExercises([])\r\n            }\r\n            else\r\n                setExercises(res.data)\r\n        }).catch((err)=>{\r\n            console.log(\"Error fetching exercises\")\r\n            console.log(err)\r\n        })\r\n    }  \r\n    useEffect(()=>{\r\n        fetchAllExercises()\r\n        // setExercises(EXERCISE)\r\n        setExercise({...exercise,exer_no:exercises.length+1})\r\n    },[])\r\n    return(\r\n        <div>\r\n            <Header/>\r\n            <div style={styles.root}>\r\n                <div style={styles.cardsGrid}>\r\n                    {exercises.length>0 && exercises.map((exercise,idx)=>(\r\n                        <ExerciseCard key={idx} exercise={exercise} isStudent={false}/>\r\n                    ))}\r\n                    <ExerciseCard openDialog={openDialog}/>\r\n                    <ExerciseFormDialog open={dialogOpen} handleDialogClose={handleDialogClose} \r\n                    exerciseNumber={exercises.length+1}\r\n                    exercise={exercise} setExercise={setExercise}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Exercise","F:\\MyProjects\\labtrackerfrontend\\src\\views\\staffs\\Home.js",["76","77","78","79","80"],"import React, {useState,useEffect} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button'\r\nimport Header from '../../components/Header'\r\nimport LabCard from '../../components/LabCard'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport HistoryIcon from '@material-ui/icons/History'\r\nimport ListIcon from '@material-ui/icons/List'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport Input from '@material-ui/core/Input';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nconst axios = require('axios')\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\nconst LAB = [\r\n    {\r\n        lab_name:\"Data structures and Algorithms\",\r\n        lab_code:\"15CS301\",\r\n        exer_ids:['1','2'],\r\n        year:\"2020\"\r\n    },\r\n    {\r\n        lab_name:\"Operating systems\",\r\n        lab_code:\"15CS302\",\r\n        exer_ids:['1','2'],\r\n        year:\"2020\"\r\n    },\r\n    {\r\n        lab_name:\"Computer Graphics\",\r\n        lab_code:\"15CS302\",\r\n        exer_ids:['1','2'],\r\n        year:\"2020\"\r\n    },\r\n]\r\nconst PLAB = [\r\n    {\r\n        lab_name:\"C Programming\",\r\n        lab_code:\"15CS301\",\r\n        exer_ids:['1','2'],\r\n        year:\"2019\"\r\n    },\r\n    {\r\n        lab_name:\"Operating systems\",\r\n        lab_code:\"15CS302\",\r\n        exer_ids:['1','2'],\r\n        year:\"2019\"\r\n    },\r\n]\r\n\r\nconst styles={\r\n    root:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        width:'80%',\r\n        margin:\"0 auto\"\r\n    },\r\n    cardsGrid:{\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        flexWrap:'wrap'\r\n    },\r\n    inputContainer:{\r\n        marginTop:'4%'\r\n    }\r\n}\r\nconst STUDENTS = [\r\n    {\r\n        studentId:'3'\r\n    },\r\n    {\r\n        studentId:'4'\r\n    }\r\n]\r\nconst STAFFS = [\r\n    {\r\n        staffId:'1'\r\n    },\r\n    {\r\n        staffId:'2'\r\n    }\r\n]\r\nfunction LabFormDialog({open,handleDialogClose,lab,setLab,students,staffs}){\r\n    const [selectedStudents,setSelectedStudents] = useState([])\r\n    const [selectedStaffs,setSelectedStaffs] = useState([])\r\n    const handleInputChange = (e)=>{\r\n        setLab({...lab,[e.target.name]:e.target.value})\r\n    }\r\n    return(\r\n        <Dialog open={open} onClose={handleDialogClose} aria-labelledby=\"form-dialog-title\" fullWidth>\r\n        <DialogTitle id=\"form-dialog-title\">Add New Lab</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Year {4}\r\n          </DialogContentText>\r\n          <div style={styles.inputContainer}>\r\n            <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                name=\"lab_name\"\r\n                label=\"Lab Name\"\r\n                value={lab.lab_name}\r\n                onChange={handleInputChange}\r\n                fullWidth\r\n            />\r\n          </div>\r\n          <div style={styles.inputContainer}>\r\n            <FormControl fullWidth>\r\n                <InputLabel id=\"demo-mutiple-name-label\">Staffs</InputLabel>\r\n                <Select\r\n                labelId=\"demo-mutiple-name-label\"\r\n                id=\"demo-mutiple-name\"\r\n                multiple\r\n                value={selectedStaffs}\r\n                onChange={(event)=>{\r\n                    setSelectedStaffs(event.target.value)\r\n                }}\r\n                input={<Input />}\r\n                MenuProps={MenuProps}\r\n                >\r\n                {staffs.map((staff) => (\r\n                    <MenuItem key={staff.staffId} value={staff.staffId}>\r\n                    {staff.staffId}\r\n                    </MenuItem>\r\n                ))}\r\n                </Select>\r\n            </FormControl>\r\n          </div>\r\n          <div style={styles.inputContainer}>\r\n            <FormControl fullWidth>\r\n                <InputLabel id=\"demo-mutiple-name-label\">Students</InputLabel>\r\n                <Select\r\n                labelId=\"demo-mutiple-name-label\"\r\n                id=\"demo-mutiple-name\"\r\n                multiple\r\n                onChange={(event)=>{\r\n                    setSelectedStudents(event.target.value)\r\n                }}\r\n                value={selectedStudents}\r\n                input={<Input />}\r\n                MenuProps={MenuProps}\r\n                >\r\n                {students.map((student) => (\r\n                    <MenuItem key={student.studentId} value={student.studentId}>\r\n                    {student.studentId}\r\n                    </MenuItem>\r\n                ))}\r\n                </Select>\r\n            </FormControl>\r\n          </div>\r\n          <div style={styles.inputContainer}>\r\n            <TextField\r\n                margin=\"dense\"\r\n                label=\"Lab Code\"\r\n                value={lab.lab_code}\r\n                onChange={handleInputChange}\r\n                name=\"lab_code\"\r\n                fullWidth\r\n            />\r\n          </div>\r\n          <div style={styles.inputContainer}>\r\n            <TextField\r\n            label=\"Description\"\r\n            multiline\r\n            name=\"lab_description\"\r\n            value={lab.lab_description}\r\n            onChange={handleInputChange}\r\n            rows={4}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDialogClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button id=\"create\" onClick={(e)=>{\r\n              console.log(selectedStudents)\r\n              handleDialogClose(e,selectedStaffs,selectedStudents)\r\n          }} color=\"primary\">\r\n            Create\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    )\r\n}\r\nfunction Home({isStaff}) {\r\n    const history = useHistory()\r\n    const [currentLabs,setCurrentLabs] = useState([])\r\n    const [pastLabs,setPastLabs] = useState([])\r\n    const [tabValue,setTabValue] = useState(0)\r\n    const [dialogOpen, setDialogOpen] = React.useState(false);\r\n    const [students,setStudents] = useState([])\r\n    const [staffs,setStaffs] = useState([])\r\n    const [lab,setLab ] =useState({\r\n        lab_name:\"\",\r\n        lab_description:\"\",\r\n        lab_code:\"\"\r\n    })\r\n    const [staffId] = useState(1)\r\n    const openDialog = () => {\r\n        setDialogOpen(true);\r\n        console.log(\"OPEN DIALOG\")\r\n    };\r\n\r\n    const handleDialogClose = (e,selectedStaffs,selectedStudents) => {\r\n        if(e.target.innerHTML === \"Create\"){\r\n            axios.post(`http://localhost:3002/lab/addlab`,{...lab,student_ids:selectedStudents,staff_ids:selectedStaffs}).then((res)=>{\r\n                console.log(res)\r\n                fetchAllLabs()\r\n            }).catch((err)=>{\r\n                console.log(\"Error adding new lab\")\r\n                console.log(err)\r\n            })\r\n            setLab({\r\n                lab_name:\"\",\r\n                lab_description:\"\",\r\n                lab_code:\"\",\r\n                student_ids:[],\r\n                staff_ids:[]\r\n            })\r\n\r\n        }\r\n        setDialogOpen(false);\r\n    };\r\n    const handleTabChange = (event,newValue)=>{\r\n        setTabValue(newValue)\r\n    }\r\n    const fetchAllLabs = ()=>{\r\n        axios.get('http://localhost:3002/staff/viewAllLabs',{\r\n            params:{staffId:staffId}\r\n        }).then((res)=>{\r\n            console.log(res.data)\r\n            setCurrentLabs(res.data)\r\n        }).catch((err)=>{\r\n            console.log(\"Error fetching all labs\")\r\n            console.log(err)\r\n        })\r\n    }\r\n    const fetchAllStudents = ()=>{\r\n        axios.get(`http://localhost:3002/student/allStudents`).then((res)=>{\r\n            setStudents(res.data)\r\n        }).catch((err)=>{\r\n            console.log(\"Error fetching students\")\r\n            console.log(err)\r\n        })\r\n    }\r\n    const fetchAllStaffs = ()=>{\r\n        axios.get(`http://localhost:3002/staff/allStaffs`).then((res)=>{\r\n            setStaffs(res.data)\r\n        }).catch((err)=>{\r\n            console.log(\"Error fetching students\")\r\n            console.log(err)\r\n        })\r\n    }\r\n    useEffect(()=>{\r\n      //setCurrentLabs(LAB)\r\n      //setStaffs(STAFFS)\r\n      //setStudents(STUDENTS)\r\n      fetchAllStaffs()\r\n      fetchAllStudents()\r\n      setPastLabs(PLAB)\r\n      fetchAllLabs()\r\n      console.log(\"Is staff \"+isStaff)\r\n    },[])\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <div style={styles.root}>\r\n                <Paper square>\r\n                    <Tabs\r\n                        value={tabValue}\r\n                        indicatorColor=\"secondary\"\r\n                        textColor=\"secondary\"\r\n                        onChange={handleTabChange}\r\n                    >\r\n                        <Tab label=\"Current\" icon={<ListIcon/>}/>\r\n                        <Tab label=\"Past\" icon={<HistoryIcon/>}/>\r\n                    </Tabs>\r\n                </Paper>\r\n                <div style={styles.cardsGrid}>\r\n                    {tabValue === 0 && ((currentLabs.length>0 && currentLabs.map((lab,idx)=>(\r\n                        <LabCard key={idx} lab={lab} isStudent={isStaff}/>\r\n                    )))||(currentLabs.length===0 && \r\n                    <div style={{padding:100}}>\r\n                        No Current Labs !\r\n                    </div>))}\r\n                    {tabValue === 1 && ((pastLabs.length>0 && pastLabs.map((lab,idx)=>(\r\n                        <LabCard key={idx} lab={lab} isStudent={isStaff}/>\r\n                    )))||(pastLabs.length===0 && \r\n                    <div style={{padding:100}}>\r\n                        No Past Labs !\r\n                    </div>))}\r\n                    <LabCard openDialog={openDialog}/>\r\n                    {lab&&<LabFormDialog open={dialogOpen} handleDialogClose={handleDialogClose}\r\n                    lab={lab} setLab = {setLab}\r\n                    students={students} staffs={staffs}/>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Home",{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":2,"column":47,"nodeType":"87","messageId":"88","endLine":2,"endColumn":57},{"ruleId":"85","severity":1,"message":"89","line":3,"column":15,"nodeType":"87","messageId":"88","endLine":3,"endColumn":23},{"ruleId":"85","severity":1,"message":"90","line":3,"column":24,"nodeType":"87","messageId":"88","endLine":3,"endColumn":33},{"ruleId":"85","severity":1,"message":"91","line":1,"column":8,"nodeType":"87","messageId":"88","endLine":1,"endColumn":14},{"ruleId":"85","severity":1,"message":"92","line":6,"column":7,"nodeType":"87","messageId":"88","endLine":6,"endColumn":15},{"ruleId":"93","severity":1,"message":"94","line":54,"column":7,"nodeType":"95","endLine":54,"endColumn":9,"suggestions":"96"},{"ruleId":"85","severity":1,"message":"97","line":10,"column":8,"nodeType":"87","messageId":"88","endLine":10,"endColumn":23},{"ruleId":"85","severity":1,"message":"98","line":13,"column":7,"nodeType":"87","messageId":"88","endLine":13,"endColumn":23},{"ruleId":"93","severity":1,"message":"99","line":73,"column":7,"nodeType":"95","endLine":73,"endColumn":9,"suggestions":"100"},{"ruleId":"85","severity":1,"message":"91","line":3,"column":8,"nodeType":"87","messageId":"88","endLine":3,"endColumn":14},{"ruleId":"85","severity":1,"message":"101","line":13,"column":7,"nodeType":"87","messageId":"88","endLine":13,"endColumn":10},{"ruleId":"85","severity":1,"message":"102","line":63,"column":11,"nodeType":"87","messageId":"88","endLine":63,"endColumn":18},{"ruleId":"93","severity":1,"message":"103","line":86,"column":7,"nodeType":"95","endLine":86,"endColumn":9,"suggestions":"104"},{"ruleId":"85","severity":1,"message":"105","line":14,"column":5,"nodeType":"87","messageId":"88","endLine":14,"endColumn":23},{"ruleId":"85","severity":1,"message":"106","line":15,"column":5,"nodeType":"87","messageId":"88","endLine":15,"endColumn":23},{"ruleId":"85","severity":1,"message":"92","line":19,"column":7,"nodeType":"87","messageId":"88","endLine":19,"endColumn":15},{"ruleId":"85","severity":1,"message":"107","line":62,"column":11,"nodeType":"87","messageId":"88","endLine":62,"endColumn":16},{"ruleId":"93","severity":1,"message":"108","line":217,"column":7,"nodeType":"95","endLine":217,"endColumn":9,"suggestions":"109"},{"ruleId":"85","severity":1,"message":"101","line":34,"column":7,"nodeType":"87","messageId":"88","endLine":34,"endColumn":10},{"ruleId":"85","severity":1,"message":"110","line":86,"column":7,"nodeType":"87","messageId":"88","endLine":86,"endColumn":15},{"ruleId":"85","severity":1,"message":"111","line":94,"column":7,"nodeType":"87","messageId":"88","endLine":94,"endColumn":13},{"ruleId":"85","severity":1,"message":"102","line":208,"column":11,"nodeType":"87","messageId":"88","endLine":208,"endColumn":18},{"ruleId":"93","severity":1,"message":"112","line":285,"column":7,"nodeType":"95","endLine":285,"endColumn":9,"suggestions":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'Button' is defined but never used.","'EXERCISE' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchAllExercises'. Either include it or remove the dependency array.","ArrayExpression",["116"],"'CheckCircleIcon' is defined but never used.","'problemStatement' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'isStaff' and 'location.state'. Either include them or remove the dependency array.",["117"],"'LAB' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchAllLabs'. Either include it or remove the dependency array.",["118"],"'KeyboardTimePicker' is defined but never used.","'KeyboardDatePicker' is defined but never used.","'check' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'exercise', 'exercises.length', and 'fetchAllExercises'. Either include them or remove the dependency array. You can also do a functional update 'setExercise(e => ...)' if you only need 'exercise' in the 'setExercise' call.",["119"],"'STUDENTS' is assigned a value but never used.","'STAFFS' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchAllLabs' and 'isStaff'. Either include them or remove the dependency array.",["120"],"no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},"Update the dependencies array to be: [fetchAllExercises]",{"range":"131","text":"132"},"Update the dependencies array to be: [isStaff, location.state]",{"range":"133","text":"134"},"Update the dependencies array to be: [fetchAllLabs]",{"range":"135","text":"136"},"Update the dependencies array to be: [exercise, exercises.length, fetchAllExercises]",{"range":"137","text":"138"},"Update the dependencies array to be: [fetchAllLabs, isStaff]",{"range":"139","text":"140"},[1375,1377],"[fetchAllExercises]",[2862,2864],"[isStaff, location.state]",[2339,2341],"[fetchAllLabs]",[7445,7447],"[exercise, exercises.length, fetchAllExercises]",[8894,8896],"[fetchAllLabs, isStaff]"]